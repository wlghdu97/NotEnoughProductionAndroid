plugins {
    id "org.jetbrains.kotlin.multiplatform"
    id "kotlin-kapt"
    id "com.android.library"
    id "com.chromaticnoise.multiplatform-swiftpackage" version "2.0.3"
    id "io.gitlab.arturbosch.detekt"
}

if (jacocoEnabled.toBoolean()) {
    apply from: rootProject.file("jacoco.gradle")
}

android {
    configurations {
        androidTestApi {}
        androidTestDebugApi {}
        androidTestReleaseApi {}
        androidTestStagingApi {}
        testApi {}
        testDebugApi {}
        testReleaseApi {}
        testStagingApi {}
    }
}

kotlin {
    android()

    // HMPP issue by https://youtrack.jetbrains.com/issue/KT-40975
    def onPhone = System.getenv("SDK_NAME")?.startsWith("iphoneos") ?: false
    if (onPhone) {
        iosArm64("ios") {
            binaries.framework {
                baseName = "Shared"
            }
        }
    } else {
        iosX64("ios") {
            binaries.framework {
                baseName = "Shared"
            }
        }
    }

    sourceSets {
        commonMain.dependencies {
            implementation project(path: ':model')
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
        }
        androidMain.dependencies {
            implementation 'androidx.appcompat:appcompat:1.1.0'
            implementation 'androidx.core:core-ktx:1.1.0'
            implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
            implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
            implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
            implementation "androidx.paging:paging-runtime:$paging_version"
            implementation "androidx.preference:preference:$preference_version"

            implementation "androidx.room:room-runtime:$room_version"
            implementation "androidx.room:room-ktx:$room_version"

            implementation "com.jakewharton.timber:timber:$timber_version"

            implementation "com.google.dagger:dagger:$dagger_version"
            implementation "com.google.dagger:dagger-android-support:$dagger_version"

            implementation "com.google.code.gson:gson:$gson_version"
            implementation "org.apache.commons:commons-math3:$math_version"
        }
        androidTest.dependencies {
            implementation "junit:junit:$junit_version"
            implementation "android.arch.core:core-testing:$core_testing_version"
            implementation "org.mockito:mockito-core:$mockito_version"
            implementation "org.awaitility:awaitility:$awaitibility_version"
            implementation "org.awaitility:awaitility-kotlin:$awaitibility_version"
            implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"

            implementation project(path: ':model')
            implementation project(path: ':test-shared')
        }
        androidStagingTest.dependencies {
            implementation project(path: ':test-shared')
        }
        iosMain.dependencies {

        }
    }
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled jacocoEnabled.toBoolean()
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        staging {
            initWith debug
            matchingFallbacks = ['debug']
        }
    }

    sourceSets {
        main {
            manifest.srcFile("src/androidMain/AndroidManifest.xml")
            java.srcDirs("src/androidMain/kotlin")
            res.srcDirs("src/androidMain/res")
        }
        test {
            java.srcDirs("src/androidTest/kotlin")
            res.srcDirs("src/androidTest/res")
        }
        debug {
            java.srcDirs("src/androidDebugRelease/kotlin")
            res.srcDirs("src/androidDebugRelease/res")
        }
        release {
            java.srcDirs("src/androidDebugRelease/kotlin")
            res.srcDirs("src/androidDebugRelease/res")
        }
        staging {
            java.srcDirs("src/androidStaging/kotlin")
            res.srcDirs("src/androidStaging/res")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    kapt "androidx.room:room-compiler:$room_compiler_version"

    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "android.arch.core:core-testing:$core_testing_version"
    androidTestImplementation "org.awaitility:awaitility:$awaitibility_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"

    androidTestUtil "androidx.test:orchestrator:$test_orchestrator_version"

    androidTestImplementation project(path: ':test-shared')
}

multiplatformSwiftPackage {
    swiftToolsVersion("5.3")
    buildConfiguration { debug() }
    targetPlatforms {
        iOS { v("15") }
    }
}
